Acquiring state lock. This may take a few moments...
Refreshing Terraform state in-memory prior to plan...
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.

data.azurerm_key_vault.demo: Refreshing state...
data.azurerm_key_vault_secret.sslpubkey: Refreshing state...
data.azurerm_key_vault_secret.tenantid: Refreshing state...
data.azurerm_key_vault_secret.passwordadmin: Refreshing state...
data.azurerm_key_vault_secret.subscriptionid: Refreshing state...
data.azurerm_key_vault_secret.clientsecret: Refreshing state...
data.azurerm_key_vault_secret.clientid: Refreshing state...

------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_linux_virtual_machine.myterraformvm[0] will be created
  + resource "azurerm_linux_virtual_machine" "myterraformvm" {
      + admin_username                  = "mikehaslam"
      + allow_extension_operations      = true
      + computer_name                   = (known after apply)
      + disable_password_authentication = true
      + extensions_time_budget          = "PT1H30M"
      + id                              = (known after apply)
      + location                        = "westeurope"
      + max_bid_price                   = -1
      + name                            = "vm-demo-01"
      + network_interface_ids           = (known after apply)
      + priority                        = "Regular"
      + private_ip_address              = (known after apply)
      + private_ip_addresses            = (known after apply)
      + provision_vm_agent              = true
      + public_ip_address               = (known after apply)
      + public_ip_addresses             = (known after apply)
      + resource_group_name             = "terraform-demo"
      + size                            = "Standard_DS1_v2"
      + tags                            = {
          + "environment" = "Terraform Demo"
        }
      + virtual_machine_id              = (known after apply)
      + zone                            = (known after apply)

      + admin_ssh_key {
          + public_key = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC4NlEDLFvWBEC8CsUDVUXXb/3B+iNBOcIzx3CvLhiwU9tEXsDmdTzZiwr9zcspr78VL5I2JF/mIZI2594PvbjNi2UQVK9yWXi9X1AOAv2MeekDgxJYfJJjNLYne+nIJEmPGaka8hAXM9lswa7uxfXunAe2Mz1VEORBgqhT2Qgy2xvNz5xUh3JFXgzRfaQ7xWLJ4oZfeiwk4i/2mqYVQ5ryedUadzC3QYaXsah+yUocARfJsVI81oWMUQgL2n/YxMHK85EVtOtDknZ9236BL7MhpUC4KR00tSNYB+iNSfSCC8xr8fTfCmISm4InsxPRPVvZuF3LCQ2OBSN1pToLv/pNv41Uz3TSbRJ5OGsxpydz1/BJO9YcQHzzdp2Q3kMef9pU6/g9lFzGixasLbLZgSXGeurvNcnhFfSa+nbOEW91Mf+38qUNZTIoH3lFNPj5LSrB1BIV6i0K1bZ8++Mi4DlnSBdjI1zQbacSRJ5LDAKcEiJ8B0Eg9716rHgL3ZHsra8= mikehaslam@C02DC9D5MD6R"
          + username   = "mikehaslam"
        }

      + boot_diagnostics {
          + storage_account_uri = (known after apply)
        }

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + name                      = "vm-demo-01-osdisk"
          + storage_account_type      = "Standard_LRS"
          + write_accelerator_enabled = false
        }

      + source_image_reference {
          + offer     = "UbuntuServer"
          + publisher = "Canonical"
          + sku       = "16.04-LTS"
          + version   = "latest"
        }
    }

  # azurerm_linux_virtual_machine.myterraformvm[1] will be created
  + resource "azurerm_linux_virtual_machine" "myterraformvm" {
      + admin_username                  = "mikehaslam"
      + allow_extension_operations      = true
      + computer_name                   = (known after apply)
      + disable_password_authentication = true
      + extensions_time_budget          = "PT1H30M"
      + id                              = (known after apply)
      + location                        = "westeurope"
      + max_bid_price                   = -1
      + name                            = "vm-demo-02"
      + network_interface_ids           = (known after apply)
      + priority                        = "Regular"
      + private_ip_address              = (known after apply)
      + private_ip_addresses            = (known after apply)
      + provision_vm_agent              = true
      + public_ip_address               = (known after apply)
      + public_ip_addresses             = (known after apply)
      + resource_group_name             = "terraform-demo"
      + size                            = "Standard_DS1_v2"
      + tags                            = {
          + "environment" = "Terraform Demo"
        }
      + virtual_machine_id              = (known after apply)
      + zone                            = (known after apply)

      + admin_ssh_key {
          + public_key = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC4NlEDLFvWBEC8CsUDVUXXb/3B+iNBOcIzx3CvLhiwU9tEXsDmdTzZiwr9zcspr78VL5I2JF/mIZI2594PvbjNi2UQVK9yWXi9X1AOAv2MeekDgxJYfJJjNLYne+nIJEmPGaka8hAXM9lswa7uxfXunAe2Mz1VEORBgqhT2Qgy2xvNz5xUh3JFXgzRfaQ7xWLJ4oZfeiwk4i/2mqYVQ5ryedUadzC3QYaXsah+yUocARfJsVI81oWMUQgL2n/YxMHK85EVtOtDknZ9236BL7MhpUC4KR00tSNYB+iNSfSCC8xr8fTfCmISm4InsxPRPVvZuF3LCQ2OBSN1pToLv/pNv41Uz3TSbRJ5OGsxpydz1/BJO9YcQHzzdp2Q3kMef9pU6/g9lFzGixasLbLZgSXGeurvNcnhFfSa+nbOEW91Mf+38qUNZTIoH3lFNPj5LSrB1BIV6i0K1bZ8++Mi4DlnSBdjI1zQbacSRJ5LDAKcEiJ8B0Eg9716rHgL3ZHsra8= mikehaslam@C02DC9D5MD6R"
          + username   = "mikehaslam"
        }

      + boot_diagnostics {
          + storage_account_uri = (known after apply)
        }

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + name                      = "vm-demo-02-osdisk"
          + storage_account_type      = "Standard_LRS"
          + write_accelerator_enabled = false
        }

      + source_image_reference {
          + offer     = "UbuntuServer"
          + publisher = "Canonical"
          + sku       = "16.04-LTS"
          + version   = "latest"
        }
    }

  # azurerm_linux_virtual_machine.myterraformvm[2] will be created
  + resource "azurerm_linux_virtual_machine" "myterraformvm" {
      + admin_username                  = "mikehaslam"
      + allow_extension_operations      = true
      + computer_name                   = (known after apply)
      + disable_password_authentication = true
      + extensions_time_budget          = "PT1H30M"
      + id                              = (known after apply)
      + location                        = "westeurope"
      + max_bid_price                   = -1
      + name                            = "vm-demo-03"
      + network_interface_ids           = (known after apply)
      + priority                        = "Regular"
      + private_ip_address              = (known after apply)
      + private_ip_addresses            = (known after apply)
      + provision_vm_agent              = true
      + public_ip_address               = (known after apply)
      + public_ip_addresses             = (known after apply)
      + resource_group_name             = "terraform-demo"
      + size                            = "Standard_DS1_v2"
      + tags                            = {
          + "environment" = "Terraform Demo"
        }
      + virtual_machine_id              = (known after apply)
      + zone                            = (known after apply)

      + admin_ssh_key {
          + public_key = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC4NlEDLFvWBEC8CsUDVUXXb/3B+iNBOcIzx3CvLhiwU9tEXsDmdTzZiwr9zcspr78VL5I2JF/mIZI2594PvbjNi2UQVK9yWXi9X1AOAv2MeekDgxJYfJJjNLYne+nIJEmPGaka8hAXM9lswa7uxfXunAe2Mz1VEORBgqhT2Qgy2xvNz5xUh3JFXgzRfaQ7xWLJ4oZfeiwk4i/2mqYVQ5ryedUadzC3QYaXsah+yUocARfJsVI81oWMUQgL2n/YxMHK85EVtOtDknZ9236BL7MhpUC4KR00tSNYB+iNSfSCC8xr8fTfCmISm4InsxPRPVvZuF3LCQ2OBSN1pToLv/pNv41Uz3TSbRJ5OGsxpydz1/BJO9YcQHzzdp2Q3kMef9pU6/g9lFzGixasLbLZgSXGeurvNcnhFfSa+nbOEW91Mf+38qUNZTIoH3lFNPj5LSrB1BIV6i0K1bZ8++Mi4DlnSBdjI1zQbacSRJ5LDAKcEiJ8B0Eg9716rHgL3ZHsra8= mikehaslam@C02DC9D5MD6R"
          + username   = "mikehaslam"
        }

      + boot_diagnostics {
          + storage_account_uri = (known after apply)
        }

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + name                      = "vm-demo-03-osdisk"
          + storage_account_type      = "Standard_LRS"
          + write_accelerator_enabled = false
        }

      + source_image_reference {
          + offer     = "UbuntuServer"
          + publisher = "Canonical"
          + sku       = "16.04-LTS"
          + version   = "latest"
        }
    }

  # azurerm_network_interface.myterraformnic[0] will be created
  + resource "azurerm_network_interface" "myterraformnic" {
      + applied_dns_servers           = (known after apply)
      + dns_servers                   = (known after apply)
      + enable_accelerated_networking = false
      + enable_ip_forwarding          = false
      + id                            = (known after apply)
      + internal_dns_name_label       = (known after apply)
      + internal_domain_name_suffix   = (known after apply)
      + location                      = "westeurope"
      + mac_address                   = (known after apply)
      + name                          = "nic-vm-demo-01"
      + private_ip_address            = (known after apply)
      + private_ip_addresses          = (known after apply)
      + resource_group_name           = "terraform-demo"
      + tags                          = {
          + "environment" = "Terraform Demo"
        }
      + virtual_machine_id            = (known after apply)

      + ip_configuration {
          + name                          = "myNicConfiguration"
          + primary                       = true
          + private_ip_address            = "10.0.1.10"
          + private_ip_address_allocation = "static"
          + private_ip_address_version    = "IPv4"
          + public_ip_address_id          = (known after apply)
          + subnet_id                     = (known after apply)
        }
    }

  # azurerm_network_interface.myterraformnic[1] will be created
  + resource "azurerm_network_interface" "myterraformnic" {
      + applied_dns_servers           = (known after apply)
      + dns_servers                   = (known after apply)
      + enable_accelerated_networking = false
      + enable_ip_forwarding          = false
      + id                            = (known after apply)
      + internal_dns_name_label       = (known after apply)
      + internal_domain_name_suffix   = (known after apply)
      + location                      = "westeurope"
      + mac_address                   = (known after apply)
      + name                          = "nic-vm-demo-02"
      + private_ip_address            = (known after apply)
      + private_ip_addresses          = (known after apply)
      + resource_group_name           = "terraform-demo"
      + tags                          = {
          + "environment" = "Terraform Demo"
        }
      + virtual_machine_id            = (known after apply)

      + ip_configuration {
          + name                          = "myNicConfiguration"
          + primary                       = true
          + private_ip_address            = "10.0.1.20"
          + private_ip_address_allocation = "static"
          + private_ip_address_version    = "IPv4"
          + public_ip_address_id          = (known after apply)
          + subnet_id                     = (known after apply)
        }
    }

  # azurerm_network_interface.myterraformnic[2] will be created
  + resource "azurerm_network_interface" "myterraformnic" {
      + applied_dns_servers           = (known after apply)
      + dns_servers                   = (known after apply)
      + enable_accelerated_networking = false
      + enable_ip_forwarding          = false
      + id                            = (known after apply)
      + internal_dns_name_label       = (known after apply)
      + internal_domain_name_suffix   = (known after apply)
      + location                      = "westeurope"
      + mac_address                   = (known after apply)
      + name                          = "nic-vm-demo-03"
      + private_ip_address            = (known after apply)
      + private_ip_addresses          = (known after apply)
      + resource_group_name           = "terraform-demo"
      + tags                          = {
          + "environment" = "Terraform Demo"
        }
      + virtual_machine_id            = (known after apply)

      + ip_configuration {
          + name                          = "myNicConfiguration"
          + primary                       = true
          + private_ip_address            = "10.0.1.30"
          + private_ip_address_allocation = "static"
          + private_ip_address_version    = "IPv4"
          + public_ip_address_id          = (known after apply)
          + subnet_id                     = (known after apply)
        }
    }

  # azurerm_network_interface_security_group_association.myterraformnicsecuritygroupassociation[0] will be created
  + resource "azurerm_network_interface_security_group_association" "myterraformnicsecuritygroupassociation" {
      + id                        = (known after apply)
      + network_interface_id      = (known after apply)
      + network_security_group_id = (known after apply)
    }

  # azurerm_network_interface_security_group_association.myterraformnicsecuritygroupassociation[1] will be created
  + resource "azurerm_network_interface_security_group_association" "myterraformnicsecuritygroupassociation" {
      + id                        = (known after apply)
      + network_interface_id      = (known after apply)
      + network_security_group_id = (known after apply)
    }

  # azurerm_network_interface_security_group_association.myterraformnicsecuritygroupassociation[2] will be created
  + resource "azurerm_network_interface_security_group_association" "myterraformnicsecuritygroupassociation" {
      + id                        = (known after apply)
      + network_interface_id      = (known after apply)
      + network_security_group_id = (known after apply)
    }

  # azurerm_network_security_group.myterraformnsg will be created
  + resource "azurerm_network_security_group" "myterraformnsg" {
      + id                  = (known after apply)
      + location            = "westeurope"
      + name                = "myNetworkSecurityGroup"
      + resource_group_name = "terraform-demo"
      + security_rule       = [
          + {
              + access                                     = "Allow"
              + description                                = ""
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "22"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "SSH"
              + priority                                   = 1001
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "*"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
            },
          + {
              + access                                     = "Allow"
              + description                                = ""
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "80"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "HTTP"
              + priority                                   = 1002
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "*"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
            },
        ]
      + tags                = {
          + "environment" = "Terraform Demo"
        }
    }

  # azurerm_public_ip.myterraformpublicip[0] will be created
  + resource "azurerm_public_ip" "myterraformpublicip" {
      + allocation_method       = "Static"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "westeurope"
      + name                    = "PublicIP-vm-demo-01"
      + resource_group_name     = "terraform-demo"
      + sku                     = "Standard"
      + tags                    = {
          + "environment" = "Terraform Demo"
        }
    }

  # azurerm_public_ip.myterraformpublicip[1] will be created
  + resource "azurerm_public_ip" "myterraformpublicip" {
      + allocation_method       = "Static"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "westeurope"
      + name                    = "PublicIP-vm-demo-02"
      + resource_group_name     = "terraform-demo"
      + sku                     = "Standard"
      + tags                    = {
          + "environment" = "Terraform Demo"
        }
    }

  # azurerm_public_ip.myterraformpublicip[2] will be created
  + resource "azurerm_public_ip" "myterraformpublicip" {
      + allocation_method       = "Static"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "westeurope"
      + name                    = "PublicIP-vm-demo-03"
      + resource_group_name     = "terraform-demo"
      + sku                     = "Standard"
      + tags                    = {
          + "environment" = "Terraform Demo"
        }
    }

  # azurerm_storage_account.mystorageaccount will be created
  + resource "azurerm_storage_account" "mystorageaccount" {
      + access_tier                      = (known after apply)
      + account_kind                     = "StorageV2"
      + account_replication_type         = "LRS"
      + account_tier                     = "Standard"
      + allow_blob_public_access         = false
      + enable_https_traffic_only        = true
      + id                               = (known after apply)
      + is_hns_enabled                   = false
      + large_file_share_enabled         = (known after apply)
      + location                         = "westeurope"
      + min_tls_version                  = "TLS1_0"
      + name                             = (known after apply)
      + primary_access_key               = (sensitive value)
      + primary_blob_connection_string   = (sensitive value)
      + primary_blob_endpoint            = (known after apply)
      + primary_blob_host                = (known after apply)
      + primary_connection_string        = (sensitive value)
      + primary_dfs_endpoint             = (known after apply)
      + primary_dfs_host                 = (known after apply)
      + primary_file_endpoint            = (known after apply)
      + primary_file_host                = (known after apply)
      + primary_location                 = (known after apply)
      + primary_queue_endpoint           = (known after apply)
      + primary_queue_host               = (known after apply)
      + primary_table_endpoint           = (known after apply)
      + primary_table_host               = (known after apply)
      + primary_web_endpoint             = (known after apply)
      + primary_web_host                 = (known after apply)
      + resource_group_name              = "terraform-demo"
      + secondary_access_key             = (sensitive value)
      + secondary_blob_connection_string = (sensitive value)
      + secondary_blob_endpoint          = (known after apply)
      + secondary_blob_host              = (known after apply)
      + secondary_connection_string      = (sensitive value)
      + secondary_dfs_endpoint           = (known after apply)
      + secondary_dfs_host               = (known after apply)
      + secondary_file_endpoint          = (known after apply)
      + secondary_file_host              = (known after apply)
      + secondary_location               = (known after apply)
      + secondary_queue_endpoint         = (known after apply)
      + secondary_queue_host             = (known after apply)
      + secondary_table_endpoint         = (known after apply)
      + secondary_table_host             = (known after apply)
      + secondary_web_endpoint           = (known after apply)
      + secondary_web_host               = (known after apply)
      + tags                             = {
          + "environment" = "Terraform Demo"
        }

      + blob_properties {
          + cors_rule {
              + allowed_headers    = (known after apply)
              + allowed_methods    = (known after apply)
              + allowed_origins    = (known after apply)
              + exposed_headers    = (known after apply)
              + max_age_in_seconds = (known after apply)
            }

          + delete_retention_policy {
              + days = (known after apply)
            }
        }

      + identity {
          + principal_id = (known after apply)
          + tenant_id    = (known after apply)
          + type         = (known after apply)
        }

      + network_rules {
          + bypass                     = (known after apply)
          + default_action             = (known after apply)
          + ip_rules                   = (known after apply)
          + virtual_network_subnet_ids = (known after apply)
        }

      + queue_properties {
          + cors_rule {
              + allowed_headers    = (known after apply)
              + allowed_methods    = (known after apply)
              + allowed_origins    = (known after apply)
              + exposed_headers    = (known after apply)
              + max_age_in_seconds = (known after apply)
            }

          + hour_metrics {
              + enabled               = (known after apply)
              + include_apis          = (known after apply)
              + retention_policy_days = (known after apply)
              + version               = (known after apply)
            }

          + logging {
              + delete                = (known after apply)
              + read                  = (known after apply)
              + retention_policy_days = (known after apply)
              + version               = (known after apply)
              + write                 = (known after apply)
            }

          + minute_metrics {
              + enabled               = (known after apply)
              + include_apis          = (known after apply)
              + retention_policy_days = (known after apply)
              + version               = (known after apply)
            }
        }
    }

  # azurerm_subnet.myterraformsubnet will be created
  + resource "azurerm_subnet" "myterraformsubnet" {
      + address_prefix                                 = (known after apply)
      + address_prefixes                               = [
          + "10.0.1.0/24",
        ]
      + enforce_private_link_endpoint_network_policies = false
      + enforce_private_link_service_network_policies  = false
      + id                                             = (known after apply)
      + name                                           = "mySubnet"
      + resource_group_name                            = "terraform-demo"
      + virtual_network_name                           = "myVnet"
    }

  # azurerm_virtual_network.myterraformnetwork will be created
  + resource "azurerm_virtual_network" "myterraformnetwork" {
      + address_space         = [
          + "10.0.0.0/16",
        ]
      + guid                  = (known after apply)
      + id                    = (known after apply)
      + location              = "westeurope"
      + name                  = "myVnet"
      + resource_group_name   = "terraform-demo"
      + subnet                = (known after apply)
      + tags                  = {
          + "environment" = "Terraform Demo"
        }
      + vm_protection_enabled = false
    }

  # null_resource.post_install[0] will be created
  + resource "null_resource" "post_install" {
      + id = (known after apply)
    }

  # null_resource.post_install[1] will be created
  + resource "null_resource" "post_install" {
      + id = (known after apply)
    }

  # null_resource.post_install[2] will be created
  + resource "null_resource" "post_install" {
      + id = (known after apply)
    }

  # random_id.randomId will be created
  + resource "random_id" "randomId" {
      + b64_std     = (known after apply)
      + b64_url     = (known after apply)
      + byte_length = 8
      + dec         = (known after apply)
      + hex         = (known after apply)
      + id          = (known after apply)
      + keepers     = {
          + "resource_group" = "terraform-demo"
        }
    }

Plan: 20 to add, 0 to change, 0 to destroy.

------------------------------------------------------------------------

Note: You didn't specify an "-out" parameter to save this plan, so Terraform
can't guarantee that exactly these actions will be performed if
"terraform apply" is subsequently run.

